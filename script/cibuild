#! /bin/sh

# Fail immediately on errors
set -e

# Display commands as they execute
set -x

# Cache pip downloads
export PIP_DOWNLOAD_CACHE=${PIP_DOWNLOAD_CACHE-.pip_cache}

# Install requirements
pip install -r requirements.txt

# Allow django liveserver tests to use a range of ports
export DJANGO_LIVE_TEST_SERVER_ADDRESS=${DJANGO_LIVE_TEST_SERVER_ADDRESS-localhost:8000-9000}

# Run the tests
NOSE_ATTR='!selenium' coverage run manage.py test

# Compute coverage
coverage html
coverage xml -o coverage.xml
diff-cover coverage.xml --html-report diff_cover.html

# Compute quality
diff-quality --violations=pep8 --html-report diff_quality_pep8.html
diff-quality --violations=pylint --html-report diff_quality_pylint.html

# Compute style violations
pep8 > pep8.report || echo "Not pep8 clean"
pylint -f parseable xblock workbench thumbs/thumbs.py > pylint.report || echo "Not pylint clean"
